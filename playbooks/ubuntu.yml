- hosts: localhost
  connection: local
  vars:
  vars_prompt:

    - name: user
      prompt: "What is the name of the account you wish to create?"
      private: no

    - name: password
      prompt: "Enter the password to be applied to the account."

  tasks:
  - name: Add Spotify repo key
    apt_key:
      url: "https://download.spotify.com/debian/pubkey.gpg"
      state: present

#  - name: Add Atom repo key
#    apt_key:
#      url: 'https://packagecloud.io/AtomEditor/atom/gpgkey'
#      state: present

  - name: Add VSCode repository
    apt_key:
      url: 'https://packages.microsoft.com/keys/microsoft.asc'
      state: present

  - name: Add Spotify repo
    apt_repository:
      repo: 'deb http://repository.spotify.com stable non-free'
      state: present

  - name: Add VSCode repository
    apt_repository:
      repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
      state: present

#  - name: Add Atom repo
#    apt_repository:
#      repo: deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main
#      filename: atom
#      state: present

  - name: Add elementaryOS PPA (Ubuntu only)
    ignore_errors: yes
    apt_repository:
      repo: ppa:elementary-os/stable
      state: present

  - name: Upgrade existing packages, clear unused dependencies
    apt:
      upgrade: yes
      autoremove: yes

  - name: Install apps, ignoring errors
    ignore_errors: yes
    apt:
      update_cache: yes
      name: vim,htop,code,alac-decoder,ubuntu-restricted-extras,noise,zsh,python-pexpect,gnome-tweaks,gnome-tweak-tool,tlp,tlp-rdw,powertop,papirus-icon-theme,spotify-client,xubuntu-wallpapers,gnome-session,ubuntu-wallpapers*,evolution,libreoffice,ansible,git,screen,vim-gtk,openssh-server
      state: present

## User being created with variables input at first prompts.
  - name: Add the user "{{ user }}"
    user:
      name: "{{ user }}"
      groups: sudo
      create_home: yes
      shell: /bin/zsh

  - name: Set user password
    expect:
      command: /bin/bash -c 'passwd "{{ user }}"'
      responses:
        password: "{{ password }}"
        password: "{{ password }}"

## Comment out if not running against desktop.
  - name: Start TLP for power savings on portable computers
    service:
      name: tlp
      state: started
      enabled: yes

  - name: Enable sshd for SSHing into this computer
    service:
      name: sshd
      state: started
      enabled: yes

  - name: Set GNOME preferences. Separately run "dconf load / < saved_settings" to take affect
    copy:
      src: "files/brad-settings.dconf"
      dest: /home/{{ user }}/saved_settings.dconf
      owner: "{{ user }}"
      mode: '0644'
      group: "{{ user }}"

  - name: Implement no-password sudo
    lineinfile:
      path: /etc/sudoers.d/{{ user }}
      line: '"{{ user }}" ALL=(ALL:ALL) NOPASSWD: ALL'
      create: yes
      validate: /usr/sbin/visudo -csf %s

  - name: Placing .zshrc in new user's home directory
    copy:
      src: "files/zshrc"
      dest: /home/{{ user }}/.zshrc
      owner: "{{ user }}"
      mode: '0644'

  - name: Importing Manjaro's excellent ZSH plugins to make your life better
    synchronize:
      src: "files/zsh"
      dest: /usr/share/

  - name: Creating GDM preference to set stock GNOME as default session for {{ user }}
    copy:
      src: "files/brad-default-session"
      dest: /var/lib/AccountServices/users/{{ user }}/{{ user }}-default-session
      owner: root
      group: root
      mode: '0644'

  - name: Create .config folder in home directory to place setup-done file
    file:
      path: "/home/{{ user }}/.config"
      state: directory
      owner: "{{ user }}"

  - name: Touch gnome-initial-setup-done in /home/{{ user }}/.config. This will allow the new account to slip the GNOME setup prompt.
    file:
      path: "/home/{{ user }}/.config/gnome-initial-setup-done"
      state: touch
      owner: "{{ user }}"
      mode: '0644'

  - name: Clean up 'df' output by excludinh snap and tmpfs from output
    lineinfile:
      path: /home/{{ user }}/.zshrc
      line: alias dfh='df -h -x squashfs -x tmpfs'
